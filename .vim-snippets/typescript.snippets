snippet sfc
import React, {SFC} from 'react'

interface Props {
  ${0}
}

const ${1:MyComponent}: SFC<Props> = (props) => {
  return null
}

export default $1
endsnippet

snippet pure
import React, {PureComponent} from 'react'

interface Props {}

interface State {}

class ${1:MyClass} extends PureComponent<Props, State> {
  constructor(props) {
    super(props)

    this.state = {}
  }

  public render() {
    return null${0}
  }
}

export default $1
endsnippet

snippet test
import React from 'react'
import {shallow} from 'enzyme'

import ${1:MyComponent} from './$1'

describe('$1', () => {
  test('it renders', () => {
    const props = {}
    const wrapper = shallow(<$1 {...props} />)
$0
    expect(wrapper).toBeTruthy()
  })
})
endsnippet

snippet testdeep
import React from 'react'
import {mount} from 'enzyme'

import ${1:MyComponent} from './$1'

describe('$1', () => {
  test('it renders', () => {
    const props = {}
    const wrapper = mount(<$1 {...props} />)
$0
    expect(wrapper).toBeTruthy()
  })
})
endsnippet
